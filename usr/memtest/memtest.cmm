/*
 * TacOS Source Code
 *    Tokuyama kousen Advanced educational Computer.
 *
 * Copyright (C) 2016-2019 by
 *                      Dept. of Computer Science and Electronic Engineering,
 *                      Tokuyama College of Technology, JAPAN
 *
 *   上記著作権者は，Free Software Foundation によって公開されている GNU 一般公
 * 衆利用許諾契約書バージョン２に記述されている条件を満たす場合に限り，本ソース
 * コード(本ソースコードを改変したものを含む．以下同様)を使用・複製・改変・再配
 * 布することを無償で許諾する．
 *
 *   本ソースコードは＊全くの無保証＊で提供されるものである。上記著作権者および
 * 関連機関・個人は本ソースコードに関して，その適用可能性も含めて，いかなる保証
 * も行わない．また，本ソースコードの利用により直接的または間接的に生じたいかな
 * る損害に関しても，その責任を負わない．
 *
 *
 */

/*
 * memtest/memtest.cmm : メモリ関連のテスト
 *
 * 2019.12.04 : 新規作成
 *
 * $Id$
 *
 */

#include <stdio.hmm>
#include <stdlib.hmm>
#include <string.hmm>
#include <syslib.hmm>
#include <crt0.hmm>

int cmdDump(int argc, char[][] argv) {
  if (argc<2) {
    fprintf(stderr, "Usage: memtest dump <addr> [<length>]\n");
    return 1;
  }
  int addr = atoi(argv[1]);
  int len = 8;
  if (argc>=3) len = atoi(argv[2]);
  char[] mem = _iToA(addr);
  for (int i = 0; i<len; i = i+8) {
    printf("0x%04x: ", addr + i);
    int subLen = i+8;
    if (subLen>len) subLen = len;
    for (int j = i; j<subLen; j = j+1) {
      printf("%02x ", ord(mem[j]));
    }
    printf("|");
    for (int j = i; j<subLen; j = j+1) {
      char ch = mem[j];
      if (ord(ch)<0x20 || ord(ch)>0x7e) ch = '.';
      printf("%c", ch);
    }
    printf("|\n");
  }
  return 0;
}

public int main(int argc, char[][] argv) {
  if (argc<2) {
    fprintf(stderr,
      "Usage: %s <command> <args>...\ncommand: dump\n",
      argv[0]);
    return 1;
  }

  char[] command = argv[1];
  int cmdArgc = argc - 1;
  char[][] cmdArgv = _addrAdd(argv, sizeof(char[]));
  if (strCmp(command, "dump") == 0) {
    return cmdDump(cmdArgc, cmdArgv);
  }

  return 0;
}
